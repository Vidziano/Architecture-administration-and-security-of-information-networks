import uuid
import random
from typing import Dict
from src.models.session_data import SessionData
from src.models.rsa_keys import RsaKeys
from src.models.aes_key import AesKey
from src.services.rsa_service import RsaService

class SessionService:
    """–°–µ—Ä–≤—ñ—Å –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è RSA-–ø–∞—Ä–∞–º–∏ —Ç–∞ AES-—Å–µ—Å—ñ—è–º–∏."""

    def __init__(self):
        self.rsa_pool: Dict[str, RsaKeys] = {}
        self.sessions: Dict[str, AesKey] = {}
        self.rsa_service = RsaService()

        # –°—Ç–≤–æ—Ä—é—î–º–æ 10 RSA-–ø–∞—Ä –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
        for _ in range(10):
            rsa_id = str(uuid.uuid4())
            self.rsa_pool[rsa_id] = self.rsa_service.generate_keys()
        print(f"üîê –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ {len(self.rsa_pool)} RSA-–ø–∞—Ä –∫–ª—é—á—ñ–≤")

    def get_random_rsa_pair(self) -> tuple[str, RsaKeys]:
        """–ü–æ–≤–µ—Ä—Ç–∞—î –≤–∏–ø–∞–¥–∫–æ–≤—É RSA-–ø–∞—Ä—É (id, keys)."""
        rsa_id = random.choice(list(self.rsa_pool.keys()))
        return rsa_id, self.rsa_pool[rsa_id]

    def save_session(self, session_id: str, aes_key: AesKey):
        """–ó–±–µ—Ä—ñ–≥–∞—î AES-–∫–ª—é—á —É —Å–µ—Å—ñ–π–Ω–æ–º—É —Å—Ö–æ–≤–∏—â—ñ."""
        self.sessions[session_id] = aes_key

    def get_session(self, session_id: str) -> AesKey:
        """–ü–æ–≤–µ—Ä—Ç–∞—î AES-–∫–ª—é—á –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó —Å–µ—Å—ñ—ó."""
        return self.sessions.get(session_id)
